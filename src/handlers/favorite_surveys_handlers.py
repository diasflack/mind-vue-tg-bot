"""
–û–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ –∫–æ–º–∞–Ω–¥ –¥–ª—è —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è –∏–∑–±—Ä–∞–Ω–Ω—ã–º–∏ –æ–ø—Ä–æ—Å–∞–º–∏ (Phase 5.3).

–ö–æ–º–∞–Ω–¥—ã:
- /favorite_surveys - —Å–ø–∏—Å–æ–∫ –∏–∑–±—Ä–∞–Ω–Ω—ã—Ö –æ–ø—Ä–æ—Å–æ–≤
- /add_favorite <–Ω–∞–∑–≤–∞–Ω–∏–µ> - –¥–æ–±–∞–≤–∏—Ç—å –æ–ø—Ä–æ—Å –≤ –∏–∑–±—Ä–∞–Ω–Ω–æ–µ
- /remove_favorite <–Ω–∞–∑–≤–∞–Ω–∏–µ> - —É–¥–∞–ª–∏—Ç—å –∏–∑ –∏–∑–±—Ä–∞–Ω–Ω–æ–≥–æ
"""

import logging
from telegram import Update
from telegram.ext import ContextTypes, CommandHandler, Application

from src.data.storage import _get_db_connection
from src.data.favorite_surveys_storage import (
    add_to_favorites,
    remove_from_favorites,
    get_favorite_surveys,
    is_favorite
)
from src.data.surveys_storage import get_template_by_name

logger = logging.getLogger(__name__)


async def favorite_surveys_handler(update: Update, context: ContextTypes.DEFAULT_TYPE) -> None:
    """
    –û—Ç–æ–±—Ä–∞–∂–∞–µ—Ç —Å–ø–∏—Å–æ–∫ –∏–∑–±—Ä–∞–Ω–Ω—ã—Ö –æ–ø—Ä–æ—Å–æ–≤.

    –ö–æ–º–∞–Ω–¥–∞: /favorite_surveys
    """
    chat_id = update.effective_chat.id
    conn = _get_db_connection()

    try:
        favorites = get_favorite_surveys(conn, chat_id)

        if not favorites:
            await update.message.reply_text(
                "–£ –≤–∞—Å –ø–æ–∫–∞ –Ω–µ—Ç –∏–∑–±—Ä–∞–Ω–Ω—ã—Ö –æ–ø—Ä–æ—Å–æ–≤.\n\n"
                "–ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ /add_favorite <–Ω–∞–∑–≤–∞–Ω–∏–µ>, —á—Ç–æ–±—ã –¥–æ–±–∞–≤–∏—Ç—å –æ–ø—Ä–æ—Å –≤ –∏–∑–±—Ä–∞–Ω–Ω–æ–µ."
            )
            return

        # –§–æ—Ä–º–∏—Ä—É–µ–º —Å–ø–∏—Å–æ–∫ –∏–∑–±—Ä–∞–Ω–Ω—ã—Ö
        message_lines = ["‚≠ê *–ò–∑–±—Ä–∞–Ω–Ω—ã–µ –æ–ø—Ä–æ—Å—ã:*\n"]

        for idx, survey in enumerate(favorites, 1):
            survey_name = survey['survey_name']
            description = survey.get('description', '')
            is_system = survey.get('is_system', 0)

            system_mark = " (—Å–∏—Å—Ç–µ–º–Ω—ã–π)" if is_system else ""
            message_lines.append(f"{idx}. *{survey_name}*{system_mark}")

            if description:
                message_lines.append(f"   _{description}_")

            message_lines.append("")

        message_lines.append("\nüí° –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ /remove_favorite <–Ω–∞–∑–≤–∞–Ω–∏–µ>, —á—Ç–æ–±—ã —É–¥–∞–ª–∏—Ç—å –∏–∑ –∏–∑–±—Ä–∞–Ω–Ω–æ–≥–æ.")

        await update.message.reply_text(
            "\n".join(message_lines),
            parse_mode='Markdown'
        )
        logger.info(f"–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å {chat_id} –ø—Ä–æ—Å–º–æ—Ç—Ä–µ–ª –∏–∑–±—Ä–∞–Ω–Ω—ã–µ –æ–ø—Ä–æ—Å—ã ({len(favorites)} —à—Ç.)")

    except Exception as e:
        logger.error(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏–∏ –∏–∑–±—Ä–∞–Ω–Ω—ã—Ö –æ–ø—Ä–æ—Å–æ–≤ –¥–ª—è {chat_id}: {e}")
        await update.message.reply_text(
            "‚ùå –ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ —Å–ø–∏—Å–∫–∞ –∏–∑–±—Ä–∞–Ω–Ω—ã—Ö –æ–ø—Ä–æ—Å–æ–≤."
        )
    finally:
        conn.close()


async def add_favorite_handler(update: Update, context: ContextTypes.DEFAULT_TYPE) -> None:
    """
    –î–æ–±–∞–≤–ª—è–µ—Ç –æ–ø—Ä–æ—Å –≤ –∏–∑–±—Ä–∞–Ω–Ω–æ–µ.

    –ö–æ–º–∞–Ω–¥–∞: /add_favorite <–Ω–∞–∑–≤–∞–Ω–∏–µ>
    """
    chat_id = update.effective_chat.id

    # –ü—Ä–æ–≤–µ—Ä—è–µ–º –∞—Ä–≥—É–º–µ–Ω—Ç—ã
    if not context.args:
        await update.message.reply_text(
            "‚ùå –ù–µ–≤–µ—Ä–Ω–æ–µ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ –∫–æ–º–∞–Ω–¥—ã.\n\n"
            "–ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ: /add_favorite <–Ω–∞–∑–≤–∞–Ω–∏–µ –æ–ø—Ä–æ—Å–∞>\n"
            "–ü—Ä–∏–º–µ—Ä: /add_favorite –ù–∞—Å—Ç—Ä–æ–µ–Ω–∏–µ"
        )
        return

    survey_name = ' '.join(context.args)
    conn = _get_db_connection()

    try:
        # –ü–æ–ª—É—á–∞–µ–º –æ–ø—Ä–æ—Å –ø–æ –∏–º–µ–Ω–∏
        template = get_template_by_name(conn, survey_name)

        if not template:
            await update.message.reply_text(
                f"‚ùå –û–ø—Ä–æ—Å '{survey_name}' –Ω–µ –Ω–∞–π–¥–µ–Ω.\n\n"
                "–ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ /surveys –¥–ª—è –ø—Ä–æ—Å–º–æ—Ç—Ä–∞ –¥–æ—Å—Ç—É–ø–Ω—ã—Ö –æ–ø—Ä–æ—Å–æ–≤."
            )
            return

        template_id = template['id']

        # –ü—Ä–æ–≤–µ—Ä—è–µ–º, –º–æ–∂–µ—Ç –±—ã—Ç—å —É–∂–µ –≤ –∏–∑–±—Ä–∞–Ω–Ω–æ–º
        if is_favorite(conn, chat_id, template_id):
            await update.message.reply_text(
                f"‚ÑπÔ∏è –û–ø—Ä–æ—Å '{survey_name}' —É–∂–µ –≤ –∏–∑–±—Ä–∞–Ω–Ω–æ–º."
            )
            return

        # –î–æ–±–∞–≤–ª—è–µ–º –≤ –∏–∑–±—Ä–∞–Ω–Ω–æ–µ
        result = add_to_favorites(conn, chat_id, template_id)

        if result:
            await update.message.reply_text(
                f"‚úÖ –û–ø—Ä–æ—Å '{survey_name}' –¥–æ–±–∞–≤–ª–µ–Ω –≤ –∏–∑–±—Ä–∞–Ω–Ω–æ–µ!\n\n"
                "–ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ /favorite_surveys –¥–ª—è –ø—Ä–æ—Å–º–æ—Ç—Ä–∞ –≤—Å–µ—Ö –∏–∑–±—Ä–∞–Ω–Ω—ã—Ö –æ–ø—Ä–æ—Å–æ–≤."
            )
            logger.info(f"–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å {chat_id} –¥–æ–±–∞–≤–∏–ª –æ–ø—Ä–æ—Å '{survey_name}' –≤ –∏–∑–±—Ä–∞–Ω–Ω–æ–µ")
        else:
            await update.message.reply_text(
                f"‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –¥–æ–±–∞–≤–∏—Ç—å –æ–ø—Ä–æ—Å '{survey_name}' –≤ –∏–∑–±—Ä–∞–Ω–Ω–æ–µ."
            )

    except Exception as e:
        logger.error(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –¥–æ–±–∞–≤–ª–µ–Ω–∏–∏ –æ–ø—Ä–æ—Å–∞ –≤ –∏–∑–±—Ä–∞–Ω–Ω–æ–µ –¥–ª—è {chat_id}: {e}")
        await update.message.reply_text(
            "‚ùå –ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –¥–æ–±–∞–≤–ª–µ–Ω–∏–∏ –æ–ø—Ä–æ—Å–∞ –≤ –∏–∑–±—Ä–∞–Ω–Ω–æ–µ."
        )
    finally:
        conn.close()


async def remove_favorite_handler(update: Update, context: ContextTypes.DEFAULT_TYPE) -> None:
    """
    –£–¥–∞–ª—è–µ—Ç –æ–ø—Ä–æ—Å –∏–∑ –∏–∑–±—Ä–∞–Ω–Ω–æ–≥–æ.

    –ö–æ–º–∞–Ω–¥–∞: /remove_favorite <–Ω–∞–∑–≤–∞–Ω–∏–µ>
    """
    chat_id = update.effective_chat.id

    # –ü—Ä–æ–≤–µ—Ä—è–µ–º –∞—Ä–≥—É–º–µ–Ω—Ç—ã
    if not context.args:
        await update.message.reply_text(
            "‚ùå –ù–µ–≤–µ—Ä–Ω–æ–µ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ –∫–æ–º–∞–Ω–¥—ã.\n\n"
            "–ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ: /remove_favorite <–Ω–∞–∑–≤–∞–Ω–∏–µ –æ–ø—Ä–æ—Å–∞>\n"
            "–ü—Ä–∏–º–µ—Ä: /remove_favorite –ù–∞—Å—Ç—Ä–æ–µ–Ω–∏–µ"
        )
        return

    survey_name = ' '.join(context.args)
    conn = _get_db_connection()

    try:
        # –ü–æ–ª—É—á–∞–µ–º –æ–ø—Ä–æ—Å –ø–æ –∏–º–µ–Ω–∏
        template = get_template_by_name(conn, survey_name)

        if not template:
            await update.message.reply_text(
                f"‚ùå –û–ø—Ä–æ—Å '{survey_name}' –Ω–µ –Ω–∞–π–¥–µ–Ω.\n\n"
                "–ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ /surveys –¥–ª—è –ø—Ä–æ—Å–º–æ—Ç—Ä–∞ –¥–æ—Å—Ç—É–ø–Ω—ã—Ö –æ–ø—Ä–æ—Å–æ–≤."
            )
            return

        template_id = template['id']

        # –£–¥–∞–ª—è–µ–º –∏–∑ –∏–∑–±—Ä–∞–Ω–Ω–æ–≥–æ
        result = remove_from_favorites(conn, chat_id, template_id)

        if result:
            await update.message.reply_text(
                f"‚úÖ –û–ø—Ä–æ—Å '{survey_name}' —É–¥–∞–ª–µ–Ω –∏–∑ –∏–∑–±—Ä–∞–Ω–Ω–æ–≥–æ."
            )
            logger.info(f"–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å {chat_id} —É–¥–∞–ª–∏–ª –æ–ø—Ä–æ—Å '{survey_name}' –∏–∑ –∏–∑–±—Ä–∞–Ω–Ω–æ–≥–æ")
        else:
            await update.message.reply_text(
                f"‚ÑπÔ∏è –û–ø—Ä–æ—Å '{survey_name}' –Ω–µ –±—ã–ª –≤ –∏–∑–±—Ä–∞–Ω–Ω–æ–º."
            )

    except Exception as e:
        logger.error(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ —É–¥–∞–ª–µ–Ω–∏–∏ –æ–ø—Ä–æ—Å–∞ –∏–∑ –∏–∑–±—Ä–∞–Ω–Ω–æ–≥–æ –¥–ª—è {chat_id}: {e}")
        await update.message.reply_text(
            "‚ùå –ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ —É–¥–∞–ª–µ–Ω–∏–∏ –æ–ø—Ä–æ—Å–∞ –∏–∑ –∏–∑–±—Ä–∞–Ω–Ω–æ–≥–æ."
        )
    finally:
        conn.close()


def register(application: Application) -> None:
    """–†–µ–≥–∏—Å—Ç—Ä–∏—Ä—É–µ—Ç handlers –≤ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–∏."""
    application.add_handler(CommandHandler('favorite_surveys', favorite_surveys_handler))
    application.add_handler(CommandHandler('add_favorite', add_favorite_handler))
    application.add_handler(CommandHandler('remove_favorite', remove_favorite_handler))

    logger.info("–ó–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω—ã handlers –¥–ª—è –∏–∑–±—Ä–∞–Ω–Ω—ã—Ö –æ–ø—Ä–æ—Å–æ–≤")
