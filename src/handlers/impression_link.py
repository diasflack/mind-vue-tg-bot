"""
Handlers –¥–ª—è –ø—Ä–∏–≤—è–∑–∫–∏ –≤–ø–µ—á–∞—Ç–ª–µ–Ω–∏–π –∫ –∑–∞–ø–∏—Å—è–º –¥–Ω—è (Phase 5.1).

–ö–æ–º–∞–Ω–¥—ã:
- /link_impression <id> <–¥–∞—Ç–∞> - –ø—Ä–∏–≤—è–∑–∞—Ç—å –≤–ø–µ—á–∞—Ç–ª–µ–Ω–∏–µ –∫ –∑–∞–ø–∏—Å–∏
- /unlink_impression <id> - –æ—Ç–≤—è–∑–∞—Ç—å –≤–ø–µ—á–∞—Ç–ª–µ–Ω–∏–µ
"""

import logging
from datetime import datetime
from telegram import Update
from telegram.ext import ContextTypes, CommandHandler

from src.data.storage import _get_db_connection
from src.data.impressions_storage import (
    link_impression_to_entry,
    unlink_impression,
    get_impression_by_id
)

logger = logging.getLogger(__name__)


async def link_impression_handler(update: Update, context: ContextTypes.DEFAULT_TYPE) -> None:
    """
    –ü—Ä–∏–≤—è–∑—ã–≤–∞–µ—Ç –≤–ø–µ—á–∞—Ç–ª–µ–Ω–∏–µ –∫ –∑–∞–ø–∏—Å–∏ –¥–Ω—è - /link_impression <id> <–¥–∞—Ç–∞>.

    Args:
        <id>: ID –≤–ø–µ—á–∞—Ç–ª–µ–Ω–∏—è
        <–¥–∞—Ç–∞>: –¥–∞—Ç–∞ –∑–∞–ø–∏—Å–∏ –≤ —Ñ–æ—Ä–º–∞—Ç–µ YYYY-MM-DD
    """
    chat_id = update.effective_chat.id

    # –ü—Ä–æ–≤–µ—Ä—è–µ–º –∞—Ä–≥—É–º–µ–Ω—Ç—ã
    if len(context.args) < 2:
        await update.message.reply_text(
            "‚ùå –ù–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ –∞—Ä–≥—É–º–µ–Ω—Ç–æ–≤.\n\n"
            "–ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ: /link_impression <id> <–¥–∞—Ç–∞>\n\n"
            "–ü—Ä–∏–º–µ—Ä: /link_impression 5 2025-10-25"
        )
        return

    # –ü–∞—Ä—Å–∏–º ID
    try:
        impression_id = int(context.args[0])
    except ValueError:
        await update.message.reply_text(
            "‚ùå –ù–µ–≤–∞–ª–∏–¥–Ω—ã–π ID –≤–ø–µ—á–∞—Ç–ª–µ–Ω–∏—è.\n\n"
            "ID –¥–æ–ª–∂–µ–Ω –±—ã—Ç—å —á–∏—Å–ª–æ–º."
        )
        return

    # –ü–∞—Ä—Å–∏–º –¥–∞—Ç—É
    entry_date = context.args[1]
    try:
        datetime.strptime(entry_date, '%Y-%m-%d')
    except ValueError:
        await update.message.reply_text(
            "‚ùå –ù–µ–≤–∞–ª–∏–¥–Ω–∞—è –¥–∞—Ç–∞.\n\n"
            "–§–æ—Ä–º–∞—Ç –¥–∞—Ç—ã: YYYY-MM-DD (–Ω–∞–ø—Ä–∏–º–µ—Ä, 2025-10-25)"
        )
        return

    try:
        conn = _get_db_connection()

        # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å—É—â–µ—Å—Ç–≤–æ–≤–∞–Ω–∏–µ –≤–ø–µ—á–∞—Ç–ª–µ–Ω–∏—è
        impression = get_impression_by_id(conn, impression_id, chat_id)
        if not impression:
            await update.message.reply_text(
                f"‚ùå –í–ø–µ—á–∞—Ç–ª–µ–Ω–∏–µ —Å ID {impression_id} –Ω–µ –Ω–∞–π–¥–µ–Ω–æ.\n\n"
                f"–ü–æ—Å–º–æ—Ç—Ä–µ—Ç—å –≤–∞—à–∏ –≤–ø–µ—á–∞—Ç–ª–µ–Ω–∏—è: /impressions"
            )
            return

        # –ü—Ä–∏–≤—è–∑—ã–≤–∞–µ–º
        success = link_impression_to_entry(conn, impression_id, chat_id, entry_date)

        if success:
            await update.message.reply_text(
                f"‚úÖ –í–ø–µ—á–∞—Ç–ª–µ–Ω–∏–µ –ø—Ä–∏–≤—è–∑–∞–Ω–æ –∫ –∑–∞–ø–∏—Å–∏ –æ—Ç {entry_date}.\n\n"
                f"üí≠ _{impression['text']}_\n\n"
                f"–ü–æ—Å–º–æ—Ç—Ä–µ—Ç—å –∑–∞–ø–∏—Å—å: /recent"
            )
        else:
            await update.message.reply_text(
                f"‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –ø—Ä–∏–≤—è–∑–∞—Ç—å –≤–ø–µ—á–∞—Ç–ª–µ–Ω–∏–µ.\n\n"
                f"–í–æ–∑–º–æ–∂–Ω–æ, –∑–∞–ø–∏—Å—å –æ—Ç {entry_date} –Ω–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç.\n\n"
                f"–ü–æ—Å–º–æ—Ç—Ä–µ—Ç—å –∑–∞–ø–∏—Å–∏: /recent"
            )

    except Exception as e:
        logger.error(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –ø—Ä–∏–≤—è–∑–∫–µ –≤–ø–µ—á–∞—Ç–ª–µ–Ω–∏—è {impression_id}: {e}")
        await update.message.reply_text(
            "‚ùå –ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –ø—Ä–∏–≤—è–∑–∫–µ –≤–ø–µ—á–∞—Ç–ª–µ–Ω–∏—è.\n"
            "–ü–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ."
        )


async def unlink_impression_handler(update: Update, context: ContextTypes.DEFAULT_TYPE) -> None:
    """
    –û—Ç–≤—è–∑—ã–≤–∞–µ—Ç –≤–ø–µ—á–∞—Ç–ª–µ–Ω–∏–µ –æ—Ç –∑–∞–ø–∏—Å–∏ –¥–Ω—è - /unlink_impression <id>.

    Args:
        <id>: ID –≤–ø–µ—á–∞—Ç–ª–µ–Ω–∏—è
    """
    chat_id = update.effective_chat.id

    # –ü—Ä–æ–≤–µ—Ä—è–µ–º –∞—Ä–≥—É–º–µ–Ω—Ç—ã
    if len(context.args) < 1:
        await update.message.reply_text(
            "‚ùå –ù–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ –∞—Ä–≥—É–º–µ–Ω—Ç–æ–≤.\n\n"
            "–ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ: /unlink_impression <id>\n\n"
            "–ü—Ä–∏–º–µ—Ä: /unlink_impression 5"
        )
        return

    # –ü–∞—Ä—Å–∏–º ID
    try:
        impression_id = int(context.args[0])
    except ValueError:
        await update.message.reply_text(
            "‚ùå –ù–µ–≤–∞–ª–∏–¥–Ω—ã–π ID –≤–ø–µ—á–∞—Ç–ª–µ–Ω–∏—è.\n\n"
            "ID –¥–æ–ª–∂–µ–Ω –±—ã—Ç—å —á–∏—Å–ª–æ–º."
        )
        return

    try:
        conn = _get_db_connection()

        # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å—É—â–µ—Å—Ç–≤–æ–≤–∞–Ω–∏–µ –≤–ø–µ—á–∞—Ç–ª–µ–Ω–∏—è
        impression = get_impression_by_id(conn, impression_id, chat_id)
        if not impression:
            await update.message.reply_text(
                f"‚ùå –í–ø–µ—á–∞—Ç–ª–µ–Ω–∏–µ —Å ID {impression_id} –Ω–µ –Ω–∞–π–¥–µ–Ω–æ.\n\n"
                f"–ü–æ—Å–º–æ—Ç—Ä–µ—Ç—å –≤–∞—à–∏ –≤–ø–µ—á–∞—Ç–ª–µ–Ω–∏—è: /impressions"
            )
            return

        # –û—Ç–≤—è–∑—ã–≤–∞–µ–º
        success = unlink_impression(conn, impression_id, chat_id)

        if success:
            await update.message.reply_text(
                f"‚úÖ –í–ø–µ—á–∞—Ç–ª–µ–Ω–∏–µ –æ—Ç–≤—è–∑–∞–Ω–æ –æ—Ç –∑–∞–ø–∏—Å–∏.\n\n"
                f"üí≠ _{impression['text']}_"
            )
        else:
            await update.message.reply_text(
                f"‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –æ—Ç–≤—è–∑–∞—Ç—å –≤–ø–µ—á–∞—Ç–ª–µ–Ω–∏–µ.\n"
                f"–ü–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ."
            )

    except Exception as e:
        logger.error(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–≤—è–∑–∫–µ –≤–ø–µ—á–∞—Ç–ª–µ–Ω–∏—è {impression_id}: {e}")
        await update.message.reply_text(
            "‚ùå –ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–≤—è–∑–∫–µ –≤–ø–µ—á–∞—Ç–ª–µ–Ω–∏—è.\n"
            "–ü–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ."
        )


def register(application) -> None:
    """–†–µ–≥–∏—Å—Ç—Ä–∏—Ä—É–µ—Ç handlers –¥–ª—è –ø—Ä–∏–≤—è–∑–∫–∏ –≤–ø–µ—á–∞—Ç–ª–µ–Ω–∏–π."""
    application.add_handler(CommandHandler('link_impression', link_impression_handler))
    application.add_handler(CommandHandler('unlink_impression', unlink_impression_handler))

    logger.info("Impression link handlers –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω—ã")
