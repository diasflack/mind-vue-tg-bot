"""
–û–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ –∫–æ–º–∞–Ω–¥ –¥–ª—è –æ–±—ä–µ–¥–∏–Ω–µ–Ω–Ω–æ–π –∞–Ω–∞–ª–∏—Ç–∏–∫–∏ (Phase 5.5).

–ö–æ–º–∞–Ω–¥—ã:
- /combined_analytics - –ø–æ–∫–∞–∑–∞—Ç—å –æ–±—ä–µ–¥–∏–Ω–µ–Ω–Ω—É—é –∞–Ω–∞–ª–∏—Ç–∏–∫—É –≤–ø–µ—á–∞—Ç–ª–µ–Ω–∏–π –∏ –æ–ø—Ä–æ—Å–æ–≤
"""

import logging
from typing import List
from telegram import Update
from telegram.ext import ContextTypes, CommandHandler, Application

from src.data.storage import _get_db_connection
from src.data.combined_analytics_storage import (
    get_combined_daily_summary,
    get_activity_overview,
    get_correlation_data
)

logger = logging.getLogger(__name__)


def parse_analytics_args(args: List[str]) -> dict:
    """
    –ü–∞—Ä—Å–∏—Ç –∞—Ä–≥—É–º–µ–Ω—Ç—ã –∫–æ–º–∞–Ω–¥—ã –∞–Ω–∞–ª–∏—Ç–∏–∫–∏.

    –ü–æ–¥–¥–µ—Ä–∂–∏–≤–∞–µ–º—ã–µ –∞—Ä–≥—É–º–µ–Ω—Ç—ã:
    - --period N: –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –¥–Ω–µ–π –¥–ª—è –∞–Ω–∞–ª–∏–∑–∞
    """
    parsed = {
        'period_days': 7  # –ü–æ —É–º–æ–ª—á–∞–Ω–∏—é 7 –¥–Ω–µ–π
    }

    i = 0
    while i < len(args):
        arg = args[i]

        if arg == '--period' and i + 1 < len(args):
            try:
                parsed['period_days'] = int(args[i + 1])
                i += 2
            except ValueError:
                i += 1
        else:
            i += 1

    return parsed


async def combined_analytics_handler(update: Update, context: ContextTypes.DEFAULT_TYPE) -> None:
    """
    –ü–æ–∫–∞–∑—ã–≤–∞–µ—Ç –æ–±—ä–µ–¥–∏–Ω–µ–Ω–Ω—É—é –∞–Ω–∞–ª–∏—Ç–∏–∫—É –≤–ø–µ—á–∞—Ç–ª–µ–Ω–∏–π –∏ –æ–ø—Ä–æ—Å–æ–≤.

    –ö–æ–º–∞–Ω–¥–∞: /combined_analytics [--period N]
    """
    chat_id = update.effective_chat.id

    # –ü–∞—Ä—Å–∏–º –∞—Ä–≥—É–º–µ–Ω—Ç—ã
    options = parse_analytics_args(context.args)
    period_days = options['period_days']

    conn = _get_db_connection()

    try:
        # –ü–æ–ª—É—á–∞–µ–º –æ–±–∑–æ—Ä –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç–∏
        overview = get_activity_overview(conn, chat_id, period_days)

        # –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞–ª–∏—á–∏–µ –¥–∞–Ω–Ω—ã—Ö
        if (overview['total_impressions'] == 0 and
            overview['total_surveys'] == 0 and
            overview['total_entries'] == 0):
            await update.message.reply_text(
                f"üìä *–û–±—ä–µ–¥–∏–Ω–µ–Ω–Ω–∞—è –∞–Ω–∞–ª–∏—Ç–∏–∫–∞ –∑–∞ {period_days} –¥–Ω–µ–π*\n\n"
                f"–£ –≤–∞—Å –ø–æ–∫–∞ –Ω–µ—Ç –¥–∞–Ω–Ω—ã—Ö –∑–∞ —É–∫–∞–∑–∞–Ω–Ω—ã–π –ø–µ—Ä–∏–æ–¥.\n\n"
                f"üí° –ù–∞—á–Ω–∏—Ç–µ –∑–∞–ø–∏—Å—ã–≤–∞—Ç—å –Ω–∞—Å—Ç—Ä–æ–µ–Ω–∏–µ –∏ –≤–ø–µ—á–∞—Ç–ª–µ–Ω–∏—è!",
                parse_mode='Markdown'
            )
            return

        # –§–æ—Ä–º–∏—Ä—É–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ
        message_lines = [f"üìä *–û–±—ä–µ–¥–∏–Ω–µ–Ω–Ω–∞—è –∞–Ω–∞–ª–∏—Ç–∏–∫–∞ –∑–∞ {period_days} –¥–Ω–µ–π*\n"]

        # –û–±—â–∏–π –æ–±–∑–æ—Ä
        message_lines.append("üìà *–û–±—â–∞—è –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç—å:*")
        message_lines.append(f"  üìù –ó–∞–ø–∏—Å–µ–π –¥–Ω—è: {overview['total_entries']}")
        message_lines.append(f"  üí≠ –í–ø–µ—á–∞—Ç–ª–µ–Ω–∏–π: {overview['total_impressions']}")
        message_lines.append(f"  üìã –û–ø—Ä–æ—Å–æ–≤: {overview['total_surveys']}")

        if overview['avg_mood_score'] is not None:
            mood_emoji = _get_mood_emoji(overview['avg_mood_score'])
            message_lines.append(f"  {mood_emoji} –°—Ä–µ–¥–Ω–µ–µ –Ω–∞—Å—Ç—Ä–æ–µ–Ω–∏–µ: {overview['avg_mood_score']}/10")

        message_lines.append("")

        # –†–∞—Å–ø—Ä–µ–¥–µ–ª–µ–Ω–∏–µ –≤–ø–µ—á–∞—Ç–ª–µ–Ω–∏–π
        if overview['total_impressions'] > 0:
            message_lines.append("üòä *–ö–∞—Ç–µ–≥–æ—Ä–∏–∏ –≤–ø–µ—á–∞—Ç–ª–µ–Ω–∏–π:*")
            categories = overview['impression_categories']

            positive = categories.get('positive', 0)
            negative = categories.get('negative', 0)
            neutral = categories.get('neutral', 0)

            if positive > 0:
                message_lines.append(f"  üòä –ü–æ–∑–∏—Ç–∏–≤–Ω—ã–µ: {positive}")
            if negative > 0:
                message_lines.append(f"  üòî –ù–µ–≥–∞—Ç–∏–≤–Ω—ã–µ: {negative}")
            if neutral > 0:
                message_lines.append(f"  üòê –ù–µ–π—Ç—Ä–∞–ª—å–Ω—ã–µ: {neutral}")

            message_lines.append("")

        # –ü–æ–ª—É—á–∞–µ–º –¥–Ω–µ–≤–Ω—É—é —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É
        daily_summary = get_combined_daily_summary(conn, chat_id, period_days)

        if daily_summary:
            message_lines.append("üìÖ *–ü–æ—Å–ª–µ–¥–Ω–∏–µ –¥–Ω–∏:*")

            # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –ø–æ—Å–ª–µ–¥–Ω–∏–µ 5 –¥–Ω–µ–π
            for day in daily_summary[:5]:
                date = day['date']
                mood = day['mood_score']
                impressions = day['impressions_count']
                surveys = day['surveys_count']

                mood_str = f"{mood}/10" if mood is not None else "‚Äî"
                message_lines.append(
                    f"  {date}: –Ω–∞—Å—Ç—Ä. {mood_str}, "
                    f"–≤–ø–µ—á. {impressions}, –æ–ø—Ä. {surveys}"
                )

            message_lines.append("")

        # –ö–æ—Ä—Ä–µ–ª—è—Ü–∏–æ–Ω–Ω—ã–π –∞–Ω–∞–ª–∏–∑
        correlation_data = get_correlation_data(conn, chat_id, period_days)

        if correlation_data and any(d['mood_score'] is not None for d in correlation_data):
            message_lines.append("üîó *–ö–æ—Ä—Ä–µ–ª—è—Ü–∏–∏:*")

            # –ê–Ω–∞–ª–∏–∑–∏—Ä—É–µ–º —Å–≤—è–∑—å –º–µ–∂–¥—É –Ω–∞—Å—Ç—Ä–æ–µ–Ω–∏–µ–º –∏ –ø–æ–∑–∏—Ç–∏–≤–Ω—ã–º–∏ –≤–ø–µ—á–∞—Ç–ª–µ–Ω–∏—è–º–∏
            days_with_mood = [d for d in correlation_data if d['mood_score'] is not None]

            if days_with_mood:
                avg_positive_on_good_days = 0
                avg_positive_on_bad_days = 0
                good_days_count = 0
                bad_days_count = 0

                for day in days_with_mood:
                    if day['mood_score'] >= 7:  # –•–æ—Ä–æ—à–∏–π –¥–µ–Ω—å
                        avg_positive_on_good_days += day['positive_count']
                        good_days_count += 1
                    elif day['mood_score'] <= 4:  # –ü–ª–æ—Ö–æ–π –¥–µ–Ω—å
                        avg_positive_on_bad_days += day['positive_count']
                        bad_days_count += 1

                if good_days_count > 0 and bad_days_count > 0:
                    avg_positive_on_good_days /= good_days_count
                    avg_positive_on_bad_days /= bad_days_count

                    message_lines.append(
                        f"  –í —Ö–æ—Ä–æ—à–∏–µ –¥–Ω–∏ (–Ω–∞—Å—Ç—Ä. ‚â•7): {avg_positive_on_good_days:.1f} –ø–æ–∑–∏—Ç. –≤–ø–µ—á."
                    )
                    message_lines.append(
                        f"  –í –ø–ª–æ—Ö–∏–µ –¥–Ω–∏ (–Ω–∞—Å—Ç—Ä. ‚â§4): {avg_positive_on_bad_days:.1f} –ø–æ–∑–∏—Ç. –≤–ø–µ—á."
                    )

            message_lines.append("")

        # –ü–æ–¥—Å–∫–∞–∑–∫–∏
        message_lines.append("üí° *–ü–æ–¥—Å–∫–∞–∑–∫–∏:*")
        message_lines.append("  ‚Ä¢ –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ /impression_analytics –¥–ª—è –¥–µ—Ç–∞–ª—å–Ω–æ–π —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏ –≤–ø–µ—á–∞—Ç–ª–µ–Ω–∏–π")
        message_lines.append("  ‚Ä¢ –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ /survey_stats –¥–ª—è –∞–Ω–∞–ª–∏—Ç–∏–∫–∏ –æ–ø—Ä–æ—Å–æ–≤")
        message_lines.append(f"  ‚Ä¢ –ò–∑–º–µ–Ω–∏—Ç—å –ø–µ—Ä–∏–æ–¥: /combined_analytics --period <–¥–Ω–µ–π>")

        await update.message.reply_text(
            "\n".join(message_lines),
            parse_mode='Markdown'
        )

        logger.info(f"–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å {chat_id} –∑–∞–ø—Ä–æ—Å–∏–ª –æ–±—ä–µ–¥–∏–Ω–µ–Ω–Ω—É—é –∞–Ω–∞–ª–∏—Ç–∏–∫—É –∑–∞ {period_days} –¥–Ω–µ–π")

    except Exception as e:
        logger.error(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ –æ–±—ä–µ–¥–∏–Ω–µ–Ω–Ω–æ–π –∞–Ω–∞–ª–∏—Ç–∏–∫–∏ –¥–ª—è {chat_id}: {e}")
        await update.message.reply_text(
            "‚ùå –ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ –∞–Ω–∞–ª–∏—Ç–∏–∫–∏.\n"
            "–ü–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ."
        )
    finally:
        conn.close()


def _get_mood_emoji(mood_score: float) -> str:
    """–í–æ–∑–≤—Ä–∞—â–∞–µ—Ç emoji –≤ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ –æ—Ç –æ—Ü–µ–Ω–∫–∏ –Ω–∞—Å—Ç—Ä–æ–µ–Ω–∏—è."""
    if mood_score >= 8:
        return "üòä"
    elif mood_score >= 6:
        return "üôÇ"
    elif mood_score >= 4:
        return "üòê"
    else:
        return "üòî"


def register(application: Application) -> None:
    """–†–µ–≥–∏—Å—Ç—Ä–∏—Ä—É–µ—Ç handlers –≤ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–∏."""
    application.add_handler(CommandHandler('combined_analytics', combined_analytics_handler))

    logger.info("–ó–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω—ã handlers –¥–ª—è –æ–±—ä–µ–¥–∏–Ω–µ–Ω–Ω–æ–π –∞–Ω–∞–ª–∏—Ç–∏–∫–∏")
